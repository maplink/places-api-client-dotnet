h1. Client .NET (3.5) para acesso aos Webservices de locais

h2. Como usar

h3. Configuração da url de acesso ao webservice

p. Você precisa adicionar no app.config de sua aplicação a seguinte chave:

bc.. <add key="Maplink.Webservices.Places.BaseUri" value="http://url-do-webservice" /> <!-- sem a última barra ("/") -->

h3. Pesquisa de locais

h4. Por Raio

bc.. var request = new PlaceSearchRequestBuilder()
                .BasedOnRadius(1.3, -23.45, -43.56)
                .ForLicense("<login da sua licença>", "<chave da sua licença>")
                .FilteredByTerm("banco 24h") // opcional - filtrar por termo
                .FilteredByCategory(6) // opcional - filtrar por categoria
                .StartingAtIndex(30) // opcional
                .Build();

var placeSearcher = new PlaceSearcher();

var result = placeSearcher.ByRadius(request);

h4. Por Termo

bc.. var request = new PlaceSearchRequestBuilder()
                .BasedOnTerm("pizza")
                .ForLicense("<login da sua licença>", "<chave da sua licença>")
                .FilteredByState("SP") // opcional - filtrar por estado
                .FilteredByCity("São Paulo") // opcional - filtrar por cidade
                .StartingAtIndex(30) // opcional
                .Build();

var placeSearcher = new PlaceSearcher();

var result = placeSearcher.ByTerm(request);

h4. Por Categoria

bc.. var request = new PlaceSearchRequestBuilder()
               .BasedOnCategory(62)
               .ForLicense("<login da sua licença>", "<chave da sua licença>")
               .FilteredByState("SP") // opcional - filtrar por estado
               .FilteredByCity("Palestina") // opcional - filtrar por cidade
               .StartingAtIndex(30) // opcional
               .Build();

var placeSearcher = new PlaceSearcher();

var result = placeSearcher.ByCategory(request);

h4. Paginação

Cada request traz 100 resultados. Para buscar os próximos 100 ou os 100 anteriores, você pode usar o método "ByUri":


bc.. var paginationRequest = new PaginationRequestBuilder()
                    .ForLicense("<login da sua licença>", "<chave da sua licença>")
                    .WithUriPathAndQuery(result.NextPageUri)
                    .Build();

result = placeSearcher.ByUri(paginationRequest);

h3. Pesquisa de categorias

h4. Todas as categorias (disponíveis para o seu pacote)

bc.. var licenseInfo = new LicenseInfo { Key = "<chave da sua licença>", Login = "<login da sua licença>"};
var categorySearcher = new CategorySearcher();
var categories = categorySearcher.All(licenseInfo);